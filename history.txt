    1  sudo apt update && sudo apt upgrade
    2  clear
    3  sudo reboot
    4  sudo snap install docker -y
    5  sudo snap install docker 
    6  sudo addgroup --system docker
    7  sudo adduser $USER docker
    8  newgrp docker
    9  sudo snap disable docker
   10  sudo snap enable docker
   11  sudo snap install microk8s --classic --channel=1.25
   12  sudo usermod -a -G microk8s $USER
   13  sudo chown -f -R $USER ~/.kube
   14  newgrp kicrok8s
   15  newgrp microk8s
   16  echo -e 'alias kubectl="microk8s kubectl"' >> ~/.bash_aliases
   17  source ~/.bashrc
   18  curl https://pyenv.run | bash
   19  tee -a ~/.bashrc <<'EOF'
   20  Load pyenv
   21  export PYENV_ROOT="$HOME/.pyenv" 
   22  command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
   23  eval "$(pyevn init-)"
   24  # Load pyenv-virtualenv automatically
   25  eval "$(pyenv virtualenv-init -)"
   26  EOF
   27  cat ~/.bashrc
   28  clear
   29  source ~/.bashrc
   30  cat ~/.bashrc
   31  source ~/.bashrc
   32  clear
   33  source ~/.bashrc
   34  cat ~/.bashrc
   35  clear
   36  pyenv --version
   37  vim ~/.bashrc
   38  source ~/.bashrc
   39  :q!
   40  clear
   41  export PYENV_ROOT="$HOME/.pyenv"
   42  command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
   43  eval "$(pyenv init -)"
   44  eval "$(pyenv virtualenv-init -)"
   45  source ~/.bashrc
   46  curl https://pyenv.run | bash
   47  clear
   48  source ~/.bashrc
   49  pyenv --version
   50  vim ~/.bashrc
   51  source ~/.bashrc
   52  ip addr
   53  vim ~/.bashrc
   54  clear
   55  source ~/.bashrc
   56  vim ~/.bashrc
   57  clear
   58  sudo vim /etc/ssh/ssh.config
   59  sudo vim /etc/ssh/ssh_config
   60  sudo systemctl restart ssh
   61  pyenv shell 3.10.7
   62  /home/rogerio/.pyenv/versions/3.10.7/bin/python /home/rogerio/python-flask-example/app.py
   63  clear
   64  python3 app.py
   65  ls
   66  python3 app.py
   67  sudo apt install pip
   68  pip3 install -r requirements.txt
   69  pip install --upgrade pip
   70  clear
   71  pip3 install -r requirements.txt
   72  clear
   73  python3 app.py
   74  clear
   75  /home/rogerio/.pyenv/versions/3.10.7/bin/python /home/rogerio/python-flask-example/app.py
   76  clear
   77  export APP_PORT=3221
   78  python3 app.py
   79  /home/rogerio/.pyenv/versions/3.10.7/bin/python /home/rogerio/python-flask-example/app.py
   80  clear
   81  docker build -t localhost:320000/app-flask:lastest
   82  docker build -t localhost:32000/app-flask:lastest
   83  clear
   84  docker build . -t localhost:32000/app-flask:lastest
   85  docker save localhost:32000 app-flask:latest > myimage.tar
   86  docker save localhost:32000/app-flask:latest > myimage.tar
   87  microk8s ctr image import myimage.tar
   88  cocker run -rm -d -e APP_PORT=3500-p 3500:3500 localhost:32000/app-flask:latest
   89  docker run -rm -d -e APP_PORT=3500-p 3500:3500 localhost:32000/app-flask:latest
   90  docker run --rm -d -e APP_PORT=3500-p 3500:3500 localhost:32000/app-flask:latest
   91  docker run --rm -d -e APP_PORT=3500 -p 3500:3500 localhost:32000/app-flask:latest
   92  clear
   93  /home/rogerio/.pyenv/versions/3.10.7/bin/python /home/rogerio/python-flask-example/app.py
   94  clear
   95  git log
   96  git rebase -i HEAD 1
   97  git rebase -i HEAD1
   98  git rebase -i HEAD~1C
   99  git rebase -i HEAD~1^C
  100  git log
  101  clear
  102  git log
  103  git status
  104  git add .
  105  git commit -m "Alteracao" --amend
  106  git log
  107  git push origin kubernetes/desafio-01
  108  git status
  109  git push origin kubernetes/desafio-01 --force
  110  git add .
  111  git commit -m "Alteracao2" 
  112  ls
  113  git add .
  114  git commit -m "Alteracao2" 
  115  git push origin kubernetes/desafio-01 
  116  ip add
  117  ssh 
  118  ssh-keygen -o -t ed25519 -C "seu@email.aqui" -N "" -f ~/.ssh/id_ed25519
  119  cat ~/.ssh/id_ed25519
  120  cat ~/.ssh/id_ed25519.pub
  121  git clone git@github.com:rogeriorodbr/python-flask-example.git
  122  ls
  123  rm -rf python-flask-example/
  124  git clone git@github.com:rogeriorodbr/python-flask-example.git
  125  ls
  126  git clone git@github.com:rogeriorodbr/python-flask-example.git
  127  git clone git@github.com:rogeriorodbr/rogeriorodbr
  128  /
  129  git clone git@github.com:rogeriorodbr/curso-devops-bradesco
  130  ls
  131  cd curso-devops-bradesco/
  132  ls
  133  cd ..
  134  ls
  135  rm curso-devops-bradesco/
  136  rm -rf curso-devops-bradesco/
  137  ls
  138  git clone git@github.com:rogeriorodbr/python-flask-example
  139  cd python-flask-example/
  140  ls
  141  git checkout -b kubernetes/desafio-01
  142  ls
  143  ls -lah
  144  ls
  145  git remote -v
  146  ls
  147  git status
  148  cd ..
  149  rm -rf python-flask-example/
  150  ls
  151  git clone git@github.com:rogeriorodbr/python-flask-example.git
  152  ls
  153  cd python-flask-example/
  154  sudo apt install pip3
  155  sudo apt install pip
  156  python3 install -r requirements.txt
  157  ls
  158  python3 install -r requirements.txt
  159  ls
  160  pip3 install -r requirements.txt
  161  /home/rogerio/.pyenv/versions/3.8.10/bin/python3.8 -m pip install --upgrade pip
  162  pip3 install -r requirements.txt
  163  clear
  164  python3 app.py
  165  clear
  166  git config --global user.name "SEU NOME AQUI"
  167  git config --global user.name rogeriorodbr
  168  git config --global user.email rogerio.rodrigues@pucpr.edu.br
  169  git config --global core.autocrlf false
  170  git config --global core.filemode false
  171  clear
  172  git config --global core.autocrlf false
  173  git config --global core.filemode false
  174  git config --global color.ui true
  175  clear
  176  git checkout -b kubernetes/desafio-01
  177  git add .
  178  git commit -m "alteracao"
  179  git push origin kubernetes/desafio-01
  180  ip addr
  181  pyenv shell 3.10.7
  182  /home/rogerio/.pyenv/versions/3.10.7/bin/python /home/rogerio/python-flask-example/app.py
  183  /home/rogerio/.pyenv/versions/3.10.7/bin/python /home/rogerio/python-flask-example/app.py
  184  python app.py
  185  pip install -r requirements.txt 
  186  /home/rogerio/.pyenv/versions/3.10.7/bin/python /home/rogerio/python-flask-example/app.py
  187  python app.py
  188  EXPORT APP_PORT=3000
  189  export  APP_PORT=3000
  190  python app.py
  191  python3 app.py
  192  clear
  193  cd /usr
  194  ls
  195  cd ..
  196  cd snap
  197  ls
  198  docker system prune
  199  docker image ls
  200  docker image rm latest
  201  docker image rm lastest
  202  docker image rm 025
  203  docker image rm 8b
  204  docker image ls
  205  docker image rm d55
  206  ls
  207  clear
  208  df -h
  209  ls
  210  df -h
  211  du -a
  212  sudo du -a / 2>/dev/null | sort -n -r | head -n 20
  213  cd /home
  214  ls
  215  cd rogerio
  216  ls
  217  sudo du -a /home/rogerio 2>/dev/null | sort -n -r | head -n 20
  218  sudo apt install ncdu -y
  219  ncdu
  220  ncdu /
  221  microk8s ctr image import ~/myimage.tar
  222  docker save localhost:32000/app-flask:latest > ~/myimage.tar
  223  docker build . -t localhost:32000/app-flask:latest
  224  ls
  225  cd python-flask-example/
  226  ls
  227  docker build . -t localhost:32000/app-flask:latest
  228  docker save localhost:32000/app-flask:latest > ~/myimage.tar
  229  docker image ls
  230  docker image rm ad3
  231  docker image rm d55
  232  microk8s ctr image import ~/myimage.tar
  233  kubectl create -f app.pod.yml
  234  kubectl get pods
  235  kubectl get all
  236  kubectl delete deployment.apps/my-app
  237  clear
  238  kube get pods
  239  clear
  240  kubectl get pods
  241  clear
  242  kubectl get pods
  243  kubectl delete -f app.pod.yml
  244  docker image ls
  245  df -h
  246  ls
  247  vim Dockerfile 
  248  clear
  249  microk8s inpect
  250  microk8s inspect
  251  kubectl create -f app.pod.yml
  252  kubectl get pods
  253  kubectl delete -f app.pod.yml
  254  vim app.pod.yml
  255  kubectl create -f app.pod.yml
  256  kubectl 
  257  kubectl get pods -o wide
  258  reboot
  259  docker ps -a
  260  sudo reboot
  261  ls
  262  docker ps -a
  263  kubectl get all
  264  kubectl delete pod/my-app
  265  cd python-flask-example/
  266  docker build . -t localhost:32000/app-flask:latest
  267  docker save localhost:32000/app-flask:latest > ~/myimage.tar
  268  ls /
  269  ls -la /
  270  ls -la ~/
  271  microk8s ctr image import ~/myimage.tar
  272  docker image ls
  273  kubectl create -f app.pod.yml
  274  kubectl get all
  275  cd ..
  276  touch clean-microk8s.sh
  277  chmod +x clean-microk8s.sh 
  278  vim clean-microk8s.sh 
  279  kubectl delete -f app.pod.yml
  280  cd python-flask-example/
  281  kubectl delete -f app.pod.yml
  282  ../clean-microk8s.sh 
  283  microk8s ctr image import ~/myimage.tar
  284  kubectl create -f app.pod.yml
  285  kubectl get all
  286  docker run --rm -d -p 3000:3000 localhost:32000/app-flask -n lohann
  287  docker run --rm -d -p 3000:3000 -n lohann localhost:32000/app-flask
  288  docker run --rm -d -p 3000:3000 --name lohann localhost:32000/app-flask
  289  docker ps -a
  290  curl localhost:3000
  291  curl localhost:3000/health
  292  docker stop lohann
  293  kubectl get all
  294  df -h
  295  sudo shutdown
  296  sudo shutdown -h now
  297  sudo fdisk -l
  298  sudo vgdisplay
  299  sudo cfdisk
  300  sudo lvextend /dev/mapper/ubuntu--vg-ubuntu--lv -L +8G
  301  sudo resize2fs /dev/mapper/ubuntu--vg-ubuntu--lv
  302  df -h
  303  clear
  304  kubectl get pods
  305  kubectl delete -f app.pod.yml
  306  kubectl create -f app.pod.yml
  307  pyenv versions
  308  ls
  309  cd python-flask-example/
  310  ls
  311  pyenv versions
  312  history | grep pyenv
  313  pyenv --version
  314  history | grep pip
  315  sudo apt install pip3
  316  sudo apt install pip
  317  clear
  318  sudo apt install pip
  319  curl https://pyenv.run | bash
  320  clear
  321  vim ~/.bashrc
  322  exec $SHELL
  323  pyenv
  324  pyenv install -list
  325  pyenv install 3.10.0
  326  pyenv versions
  327  pyenv global 3.10.0
  328  pyenv versions
  329  exec $SHELL
  330  sudo apt install rt5-clients
  331  exec $SHELL
  332  clear
  333  kubectl create -f app.pod.yml
  334  pyenv activate aula-kubernetes
  335  pyenv virtualenv aula-kubernetes
  336  vim /home/rogerio/python-flask-example/.python-version
  337  pyenv virtualenv aula-kubernetes
  338  pyenv activate aula-kubernetes
  339  clear
  340  kubectl get pod
  341  ls
  342  cp app.pod.yml app.service.yml
  343  vim app.service.yml 
  344  kubectl get all
  345  kubectl creat -f app.deployment.yml 
  346  kubectl create -f app.deployment.yml 
  347  kubectl get all
  348  kubectl create -f app.pod.yml
  349  kubectl create -f app.service.yml
  350  vim app.service.yml 
  351  kubectl create -f app.service.yml
  352  vim app.service.yml 
  353  kubectl get all
  354  kubectl create -f app.service.yml
  355  clear
  356  kubectl create -f app.service.yml
  357  vim app.service.yml 
  358  kubectl create -f app.service.yml
  359  vim app.service.yml 
  360  kubectl create -f app.service.yml
  361  vim app.service.yml 
  362  kubectl create -f app.service.yml
  363  vim app.service.yml 
  364  kubectl create -f app.service.yml
  365  vim app.service.yml 
  366  kubectl create -f app.service.yml
  367  kubectl get all
  368  curl 10.152.183.173:80
  369  curl 10.152.183.173:80/counter
  370  kubectl exec -tty pod/my-app -- bash
  371  kubectl exec -it pod/my-app -- bash
  372  microk8s enable registry
  373  docker build . -t localhost:32000/app-flask:latest
  374  docker save localhost:32000/app-flask:latest > ~/myimage.tar
  375  microk8s ctr image import ~/myimage.tar
  376  kubectl get pods
  377  curl 10.152.183.173:80/counter
  378  curl 10.152.183.173:80
  379  curl 10.152.183.173:80/counter
  380  clear
  381  microk8s stop
  382  p remove microk8s
  383  rm ~/.bash_aliases
  384  curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
  385  sudo install minikube-linux-amd64 /usr/local/bin/minikube
  386  curl 10.152.183.173:80/counter
  387  clear
  388  minikube start --container-runtime=docker
  389  echo -e 'alias kubectl="minikube kubectl --"' >> ~/.bash_aliases
  390  sudo bash -c 'sed -i '"'"'/#include <abstractions\/openssl>/a owner @{HOME}\/\.minikube\/certs\/\* r,'"'"' /var/lib/snapd/apparmor/profiles/snap.docker.docker'
  391  sudo apparmor_parser -r /var/lib/snapd/apparmor/profiles/snap.docker.docker
  392  eval $(minikube docker-env)
  393  kubectl get all
  394  sudo snap remove microk8s
  395  kubectl get all
  396  exit
  397  kubectl get all
  398  source ~/.bashrc
  399  pyenv virtualenv aula-kubernetes
  400  history | grep pyenv
  401  pyenv activate aula-kubernetes
  402  clear
  403  kubectl get all
  404  curl 10.96.0.1:80/counter
  405  ls
  406  cd python-flask-example/
  407  curl 10.96.0.1:80/counter
  408  docker build . -t app-flask:latest 
  409  kubectl get all
  410  curl 10.96.0.1:80/counter
  411  exit
  412  clear
  413  ls
  414  cd python-flask-example/
  415  history | grep activate
  416  pyenv activate aula-kubernetes
  417  docker ps -a
  418  history | grep my-service-app
  419  history | grep create
  420  kubectl create -f app.service.yml
  421  docker ps -a
  422  kubectl get all
  423  docker ps -a
  424  clear
  425  minikube docker-env
  426  eval $(minikube docker-env)
  427  docker ps -a
  428  minikube --version
  429  minikube version
  430  docker ps -a
  431  clear
  432  vim ~/.bashrc
  433  exit
  434  cd python-flask-example/
  435  pyenv activate aula-kubernetes
  436  docker ps -a
  437  clear
  438  vim app.pod.yml 
  439  ls
  440  vim app.deployment.yml 
  441  ls *.yml
  442  vim app.service.yml 
  443  docker ps -a
  444  history | grep kubectl
  445  history | grep kubectl -o
  446  history | grep kubectl 
  447  kubectl get pods -o wide
  448  kubectl get pods 
  449  clear
  450  kubectl get all
  451  kubectl delete service/my-service-app
  452  kubectl get all
  453  docker ps -a
  454  clear
  455  vim app.p
  456  vim app.py
  457  #docker run --rm -d --p 3000:3000 --name app app.flask:latest
  458  docker build . -t app-flask:latest
  459  docker run --rm -d --p 3000:3000 --name app app.flask:latest
  460  docker run --rm -d -p 3000:3000 --name app app.flask:latest
  461  docker run --rm -d -p 3000:3000 --name app app-flask:latest
  462  clera
  463  minikube ssh
  464  kubectl create -f app.deployment.yml
  465  kubectl get all
  466  vim app.service.yml 
  467  kubectl create -f app.service.yml 
  468  kubectl get all
  469  curl 10.104.140.76
  470  minikubessh
  471  minikube ssh
  472  kubectl get all
  473  minikube ssh
  474  kubectl get all
  475  minikube ssh
  476  clear
  477  kubectl get all
  478  vim app.deployment.yml 
  479  vim app.service.yml 
  480  vim app.pod.yml 
  481  vim app.deployment.yml 
  482  vim app.pod.yml 
  483  vim app.deployment.yml 
  484  vim app.pod.yml 
  485  vim app.deployment.yml 
  486  clear
  487  history
  488  docker ps -a
  489  ls
  490  kubectl get all
  491  history | grep delete
  492  kubectl delete service/my-service-app
  493  docker build . -t app-flask:latest
  494  docker run --rm -d -p 3000:3000 --name app app-flask:latest
  495  docker ps -a
  496  docker run --rm -d -p 3000:3000 --name app app-flask:latest
  497  docker ls
  498  docker ps -a
  499  clear
  500  docker run --rm -d -p 3000:3000 --name app app-flask:latest
  501  docker rm app-flask
  502  docker rm app-flask:latest
  503  clear
  504  docker ps -a
  505  docker image
  506  docker image ls
  507  docker image rm app-flask
  508  docker run --rm -d -p 3000:3000 --name app app-flask:latest
  509  docker build . -t app-flask:latest
  510  docker run --rm -d -p 3000:3000 --name app app-flask:latest
  511  docker rm app
  512  docker rm stop
  513  docker stop app
  514  docker run --rm -d -p 3000:3000 --name app app-flask:latest
  515  mikube ssh
  516  minikube ssh
  517  docker stop app
  518  ls
  519  vim app.pod.yml 
  520  history | grep create
  521  kubectl create -f app.pod.yml
  522* 
  523  kubectl create -f app.service.yml
  524  minikube ssh
  525  clear
  526  history | grep create
  527  mikube ssh
  528  minikube ssh
  529  kubectl get all
  530  kubectl delete -f app.deployment.yml 
  531  kubectl delete -f app.pod
  532  kubectl delete -f app.pod.yml
  533  kubectl get all
  534  kubectl delete -f app.service.yml
  535  docker build . -t app-flask:latest
  536  vim app.deployment.yml 
  537  clear
  538  kubectl create -f app.deployment.yml
  539  kubectl get all
  540  kubectl create -f app.deployment.ym
  541  kubectl create -f app.service.yml
  542  kubectl get all
  543  minikube ssh
  544  clear
  545  history | grep git
  546  history | grep git | more
  547  git status
  548  git add .
  549  git commit -m "Aula - Kubernetes Services"
  550  git branch
  551  git push origin kubernetes/desafio-01
  552  history > history.txt
